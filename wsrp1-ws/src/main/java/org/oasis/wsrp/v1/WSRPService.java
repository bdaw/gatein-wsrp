/*
 * JBoss, a division of Red Hat
 * Copyright 2009, Red Hat Middleware, LLC, and individual
 * contributors as indicated by the @authors tag. See the
 * copyright.txt in the distribution for a full listing of
 * individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */

/*
*
*/

package org.oasis.wsrp.v1;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/** This class was generated by Apache CXF 2.2.2 Mon Aug 03 23:27:29 CEST 2009 Generated source version: 2.2.2 */


@WebServiceClient(name = "WSRPService",
   wsdlLocation = "file:/Users/claprun/Dev/jbossexo/modules/wsrp/trunk/producer/src/main/webapp/WEB-INF/wsdl/wsrp_services.wsdl",
   targetNamespace = "urn:oasis:names:tc:wsrp:v1:wsdl")
public class WSRPService extends Service
{

   public final static URL WSDL_LOCATION;
   public final static QName SERVICE = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPService");
   public final static QName WSRPServiceDescriptionService = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPServiceDescriptionService");
   public final static QName WSRPBaseService = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPBaseService");
   public final static QName WSRPPortletManagementService = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPPortletManagementService");
   public final static QName WSRPRegistrationService = new QName("urn:oasis:names:tc:wsrp:v1:wsdl", "WSRPRegistrationService");

   static
   {
      URL url = null;
      try
      {
         url = new URL("file:/Users/claprun/Dev/jbossexo/modules/wsrp/trunk/producer/src/main/webapp/WEB-INF/wsdl/wsrp_services.wsdl");
      }
      catch (MalformedURLException e)
      {
         System.err.println("Can not initialize the default wsdl from file:/Users/claprun/Dev/jbossexo/modules/wsrp/trunk/producer/src/main/webapp/WEB-INF/wsdl/wsrp_services.wsdl");
         // e.printStackTrace();
      }
      WSDL_LOCATION = url;
   }

   public WSRPService(URL wsdlLocation)
   {
      super(wsdlLocation, SERVICE);
   }

   public WSRPService(URL wsdlLocation, QName serviceName)
   {
      super(wsdlLocation, serviceName);
   }

   public WSRPService()
   {
      super(WSDL_LOCATION, SERVICE);
   }

   /** @return returns WSRPV1ServiceDescriptionPortType */
   @WebEndpoint(name = "WSRPServiceDescriptionService")
   public WSRPV1ServiceDescriptionPortType getWSRPServiceDescriptionService()
   {
      return super.getPort(WSRPServiceDescriptionService, WSRPV1ServiceDescriptionPortType.class);
   }

   /**
    * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features
    *                 not in the <code>features</code> parameter will have their default values.
    * @return returns WSRPV1ServiceDescriptionPortType
    */
   @WebEndpoint(name = "WSRPServiceDescriptionService")
   public WSRPV1ServiceDescriptionPortType getWSRPServiceDescriptionService(WebServiceFeature... features)
   {
      return super.getPort(WSRPServiceDescriptionService, WSRPV1ServiceDescriptionPortType.class, features);
   }

   /** @return returns WSRPV1MarkupPortType */
   @WebEndpoint(name = "WSRPBaseService")
   public WSRPV1MarkupPortType getWSRPBaseService()
   {
      return super.getPort(WSRPBaseService, WSRPV1MarkupPortType.class);
   }

   /**
    * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features
    *                 not in the <code>features</code> parameter will have their default values.
    * @return returns WSRPV1MarkupPortType
    */
   @WebEndpoint(name = "WSRPBaseService")
   public WSRPV1MarkupPortType getWSRPBaseService(WebServiceFeature... features)
   {
      return super.getPort(WSRPBaseService, WSRPV1MarkupPortType.class, features);
   }

   /** @return returns WSRPV1PortletManagementPortType */
   @WebEndpoint(name = "WSRPPortletManagementService")
   public WSRPV1PortletManagementPortType getWSRPPortletManagementService()
   {
      return super.getPort(WSRPPortletManagementService, WSRPV1PortletManagementPortType.class);
   }

   /**
    * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features
    *                 not in the <code>features</code> parameter will have their default values.
    * @return returns WSRPV1PortletManagementPortType
    */
   @WebEndpoint(name = "WSRPPortletManagementService")
   public WSRPV1PortletManagementPortType getWSRPPortletManagementService(WebServiceFeature... features)
   {
      return super.getPort(WSRPPortletManagementService, WSRPV1PortletManagementPortType.class, features);
   }

   /** @return returns WSRPV1RegistrationPortType */
   @WebEndpoint(name = "WSRPRegistrationService")
   public WSRPV1RegistrationPortType getWSRPRegistrationService()
   {
      return super.getPort(WSRPRegistrationService, WSRPV1RegistrationPortType.class);
   }

   /**
    * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features
    *                 not in the <code>features</code> parameter will have their default values.
    * @return returns WSRPV1RegistrationPortType
    */
   @WebEndpoint(name = "WSRPRegistrationService")
   public WSRPV1RegistrationPortType getWSRPRegistrationService(WebServiceFeature... features)
   {
      return super.getPort(WSRPRegistrationService, WSRPV1RegistrationPortType.class, features);
   }

}
