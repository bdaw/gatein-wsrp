
package org.oasis.wsrp.v2;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3-b02-
 * Generated source version: 2.0
 * 
 */
@WebService(name = "WSRP_v2_PortletManagement_PortType", targetNamespace = "urn:oasis:names:tc:wsrp:v2:intf")
public interface WSRPV2PortletManagementPortType {


    /**
     * 
     * @param portletDescription
     * @param resourceList
     * @param registrationContext
     * @param portletContext
     * @param userContext
     * @param desiredLocales
     * @param extensions
     * @throws OperationFailed
     * @throws MissingParameters
     * @throws InconsistentParameters
     * @throws InvalidUserCategory
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws AccessDenied
     * @throws InvalidHandle
     * @throws ResourceSuspended
     * @throws InvalidRegistration
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:getPortletDescription")
    @RequestWrapper(localName = "getPortletDescription", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.GetPortletDescription")
    @ResponseWrapper(localName = "getPortletDescriptionResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.PortletDescriptionResponse")
    public void getPortletDescription(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "portletContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        PortletContext portletContext,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "desiredLocales", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        List<String> desiredLocales,
        @WebParam(name = "portletDescription", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<PortletDescription> portletDescription,
        @WebParam(name = "resourceList", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<ResourceList> resourceList,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, InconsistentParameters, InvalidHandle, InvalidRegistration, InvalidUserCategory, MissingParameters, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param lifetime
     * @param portletHandle
     * @param registrationContext
     * @param portletContext
     * @param scheduledDestruction
     * @param portletState
     * @param userContext
     * @param extensions
     * @throws OperationFailed
     * @throws InconsistentParameters
     * @throws MissingParameters
     * @throws InvalidUserCategory
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws AccessDenied
     * @throws InvalidHandle
     * @throws ResourceSuspended
     * @throws InvalidRegistration
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:clonePortlet")
    @RequestWrapper(localName = "clonePortlet", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.ClonePortlet")
    @ResponseWrapper(localName = "clonePortletResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.PortletContext")
    public void clonePortlet(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "portletContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        PortletContext portletContext,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "lifetime", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        Lifetime lifetime,
        @WebParam(name = "portletHandle", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<String> portletHandle,
        @WebParam(name = "portletState", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<byte[]> portletState,
        @WebParam(name = "scheduledDestruction", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<Lifetime> scheduledDestruction,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, InconsistentParameters, InvalidHandle, InvalidRegistration, InvalidUserCategory, MissingParameters, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param portletHandles
     * @param registrationContext
     * @param userContext
     * @param failedPortlets
     * @param extensions
     * @throws OperationFailed
     * @throws InconsistentParameters
     * @throws MissingParameters
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws InvalidRegistration
     * @throws ResourceSuspended
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:destroyPortlets")
    @RequestWrapper(localName = "destroyPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.DestroyPortlets")
    @ResponseWrapper(localName = "destroyPortletsResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.DestroyPortletsResponse")
    public void destroyPortlets(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "portletHandles", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        List<String> portletHandles,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "failedPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<FailedPortlets>> failedPortlets,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws InconsistentParameters, InvalidRegistration, MissingParameters, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param resourceList
     * @param portletLifetime
     * @param registrationContext
     * @param portletContext
     * @param userContext
     * @param failedPortlets
     * @param extensions
     * @throws OperationFailed
     * @throws InconsistentParameters
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws InvalidHandle
     * @throws AccessDenied
     * @throws InvalidRegistration
     * @throws ResourceSuspended
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:getPortletsLifetime")
    @RequestWrapper(localName = "getPortletsLifetime", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.GetPortletsLifetime")
    @ResponseWrapper(localName = "getPortletsLifetimeResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.GetPortletsLifetimeResponse")
    public void getPortletsLifetime(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "portletContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        List<PortletContext> portletContext,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "portletLifetime", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<PortletLifetime>> portletLifetime,
        @WebParam(name = "failedPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<FailedPortlets>> failedPortlets,
        @WebParam(name = "resourceList", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<ResourceList> resourceList,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, InconsistentParameters, InvalidHandle, InvalidRegistration, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param lifetime
     * @param resourceList
     * @param updatedPortlet
     * @param registrationContext
     * @param portletContext
     * @param userContext
     * @param failedPortlets
     * @param extensions
     * @throws OperationFailed
     * @throws InconsistentParameters
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws AccessDenied
     * @throws InvalidHandle
     * @throws InvalidRegistration
     * @throws ResourceSuspended
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:setPortletsLifetime")
    @RequestWrapper(localName = "setPortletsLifetime", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.SetPortletsLifetime")
    @ResponseWrapper(localName = "setPortletsLifetimeResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.SetPortletsLifetimeResponse")
    public void setPortletsLifetime(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "portletContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        List<PortletContext> portletContext,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "lifetime", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        Lifetime lifetime,
        @WebParam(name = "updatedPortlet", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<PortletLifetime>> updatedPortlet,
        @WebParam(name = "failedPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<FailedPortlets>> failedPortlets,
        @WebParam(name = "resourceList", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<ResourceList> resourceList,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, InconsistentParameters, InvalidHandle, InvalidRegistration, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param fromUserContext
     * @param lifetime
     * @param resourceList
     * @param toUserContext
     * @param fromRegistrationContext
     * @param toRegistrationContext
     * @param failedPortlets
     * @param fromPortletContexts
     * @param copiedPortlets
     * @param extensions
     * @throws OperationFailed
     * @throws MissingParameters
     * @throws InconsistentParameters
     * @throws InvalidUserCategory
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws InvalidHandle
     * @throws AccessDenied
     * @throws InvalidRegistration
     * @throws ResourceSuspended
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:copyPortlets")
    @RequestWrapper(localName = "copyPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.CopyPortlets")
    @ResponseWrapper(localName = "copyPortletsResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.CopyPortletsResponse")
    public void copyPortlets(
        @WebParam(name = "toRegistrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext toRegistrationContext,
        @WebParam(name = "toUserContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext toUserContext,
        @WebParam(name = "fromRegistrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext fromRegistrationContext,
        @WebParam(name = "fromUserContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext fromUserContext,
        @WebParam(name = "fromPortletContexts", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        List<PortletContext> fromPortletContexts,
        @WebParam(name = "lifetime", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        Lifetime lifetime,
        @WebParam(name = "copiedPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<CopiedPortlet>> copiedPortlets,
        @WebParam(name = "failedPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<FailedPortlets>> failedPortlets,
        @WebParam(name = "resourceList", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<ResourceList> resourceList,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, InconsistentParameters, InvalidHandle, InvalidRegistration, InvalidUserCategory, MissingParameters, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param lifetime
     * @param resourceList
     * @param registrationContext
     * @param portletContext
     * @param exportedPortlet
     * @param userContext
     * @param failedPortlets
     * @param exportContext
     * @param exportByValueRequired
     * @param extensions
     * @throws OperationFailed
     * @throws ExportByValueNotSupported
     * @throws MissingParameters
     * @throws InconsistentParameters
     * @throws InvalidUserCategory
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws AccessDenied
     * @throws InvalidHandle
     * @throws ResourceSuspended
     * @throws InvalidRegistration
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:exportPortlet")
    @RequestWrapper(localName = "exportPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.ExportPortlets")
    @ResponseWrapper(localName = "exportPortletsResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.ExportPortletsResponse")
    public void exportPortlets(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "portletContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        List<PortletContext> portletContext,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "lifetime", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.INOUT)
        Holder<Lifetime> lifetime,
        @WebParam(name = "exportByValueRequired", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        Boolean exportByValueRequired,
        @WebParam(name = "exportContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<byte[]> exportContext,
        @WebParam(name = "exportedPortlet", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<ExportedPortlet>> exportedPortlet,
        @WebParam(name = "failedPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<FailedPortlets>> failedPortlets,
        @WebParam(name = "resourceList", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<ResourceList> resourceList,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, ExportByValueNotSupported, InconsistentParameters, InvalidHandle, InvalidRegistration, InvalidUserCategory, MissingParameters, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param lifetime
     * @param resourceList
     * @param registrationContext
     * @param importFailed
     * @param importPortlet
     * @param userContext
     * @param extensions
     * @param importedPortlets
     * @param importContext
     * @throws OperationFailed
     * @throws MissingParameters
     * @throws InconsistentParameters
     * @throws ExportNoLongerValid
     * @throws InvalidUserCategory
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws AccessDenied
     * @throws ResourceSuspended
     * @throws InvalidRegistration
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:importPortlet")
    @RequestWrapper(localName = "importPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.ImportPortlets")
    @ResponseWrapper(localName = "importPortletsResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.ImportPortletsResponse")
    public void importPortlets(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "importContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        byte[] importContext,
        @WebParam(name = "importPortlet", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        List<ImportPortlet> importPortlet,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "lifetime", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        Lifetime lifetime,
        @WebParam(name = "importedPortlets", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<ImportedPortlet>> importedPortlets,
        @WebParam(name = "importFailed", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<ImportPortletsFailed>> importFailed,
        @WebParam(name = "resourceList", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<ResourceList> resourceList,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, ExportNoLongerValid, InconsistentParameters, InvalidRegistration, InvalidUserCategory, MissingParameters, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param registrationContext
     * @param userContext
     * @param exportContext
     * @return
     *     returns java.util.List<org.oasis.wsrp.v2.Extension>
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:importPortlet")
    @WebResult(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
    @RequestWrapper(localName = "releaseExport", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.ReleaseExport")
    @ResponseWrapper(localName = "releaseExportResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.ReturnAny")
    public List<Extension> releaseExport(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "exportContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        byte[] exportContext,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext);

    /**
     * 
     * @param setExportLifetime
     * @return
     *     returns org.oasis.wsrp.v2.Lifetime
     * @throws OperationFailed
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws AccessDenied
     * @throws InvalidHandle
     * @throws ResourceSuspended
     * @throws InvalidRegistration
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:setExportLifetime")
    @WebResult(name = "setExportLifetimeResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", partName = "setExportLifetimeResponse")
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    public Lifetime setExportLifetime(
        @WebParam(name = "setExportLifetime", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", partName = "setExportLifetime")
        SetExportLifetime setExportLifetime)
        throws AccessDenied, InvalidHandle, InvalidRegistration, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param portletHandle
     * @param registrationContext
     * @param portletContext
     * @param scheduledDestruction
     * @param portletState
     * @param propertyList
     * @param userContext
     * @param extensions
     * @throws OperationFailed
     * @throws InconsistentParameters
     * @throws MissingParameters
     * @throws InvalidUserCategory
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws InvalidHandle
     * @throws AccessDenied
     * @throws ResourceSuspended
     * @throws InvalidRegistration
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:setPortletProperties")
    @RequestWrapper(localName = "setPortletProperties", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.SetPortletProperties")
    @ResponseWrapper(localName = "setPortletPropertiesResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.PortletContext")
    public void setPortletProperties(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "portletContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        PortletContext portletContext,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "propertyList", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        PropertyList propertyList,
        @WebParam(name = "portletHandle", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<String> portletHandle,
        @WebParam(name = "portletState", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<byte[]> portletState,
        @WebParam(name = "scheduledDestruction", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<Lifetime> scheduledDestruction,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, InconsistentParameters, InvalidHandle, InvalidRegistration, InvalidUserCategory, MissingParameters, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param resetProperties
     * @param registrationContext
     * @param names
     * @param portletContext
     * @param userContext
     * @param properties
     * @param extensions
     * @throws OperationFailed
     * @throws InconsistentParameters
     * @throws MissingParameters
     * @throws InvalidUserCategory
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws AccessDenied
     * @throws InvalidHandle
     * @throws ResourceSuspended
     * @throws InvalidRegistration
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:getPortletProperties")
    @RequestWrapper(localName = "getPortletProperties", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.GetPortletProperties")
    @ResponseWrapper(localName = "getPortletPropertiesResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.PropertyList")
    public void getPortletProperties(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "portletContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        PortletContext portletContext,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "names", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        List<String> names,
        @WebParam(name = "properties", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Property>> properties,
        @WebParam(name = "resetProperties", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<ResetProperty>> resetProperties,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, InconsistentParameters, InvalidHandle, InvalidRegistration, InvalidUserCategory, MissingParameters, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

    /**
     * 
     * @param modelDescription
     * @param resourceList
     * @param registrationContext
     * @param portletContext
     * @param userContext
     * @param desiredLocales
     * @param extensions
     * @throws OperationFailed
     * @throws InconsistentParameters
     * @throws MissingParameters
     * @throws InvalidUserCategory
     * @throws ModifyRegistrationRequired
     * @throws OperationNotSupported
     * @throws AccessDenied
     * @throws InvalidHandle
     * @throws InvalidRegistration
     * @throws ResourceSuspended
     */
    @WebMethod(action = "urn:oasis:names:tc:wsrp:v2:getPortletPropertyDescription")
    @RequestWrapper(localName = "getPortletPropertyDescription", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.GetPortletPropertyDescription")
    @ResponseWrapper(localName = "getPortletPropertyDescriptionResponse", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", className = "org.oasis.wsrp.v2.PortletPropertyDescriptionResponse")
    public void getPortletPropertyDescription(
        @WebParam(name = "registrationContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        RegistrationContext registrationContext,
        @WebParam(name = "portletContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        PortletContext portletContext,
        @WebParam(name = "userContext", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        UserContext userContext,
        @WebParam(name = "desiredLocales", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types")
        List<String> desiredLocales,
        @WebParam(name = "modelDescription", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<ModelDescription> modelDescription,
        @WebParam(name = "resourceList", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<ResourceList> resourceList,
        @WebParam(name = "extensions", targetNamespace = "urn:oasis:names:tc:wsrp:v2:types", mode = WebParam.Mode.OUT)
        Holder<List<Extension>> extensions)
        throws AccessDenied, InconsistentParameters, InvalidHandle, InvalidRegistration, InvalidUserCategory, MissingParameters, ModifyRegistrationRequired, OperationFailed, OperationNotSupported, ResourceSuspended
    ;

}
